"""initial migration

Revision ID: 339b72676a0e
Revises: 
Create Date: 2025-10-20 15:43:26.197684

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '339b72676a0e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('simplefin_organization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('domain', sa.String(), nullable=False),
    sa.Column('name', sa.String(), server_default='', nullable=False),
    sa.Column('sfin_url', sa.String(), nullable=False),
    sa.Column('url', sa.String(), server_default='', nullable=False),
    sa.Column('org_id', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('simplefin_organization', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_simplefin_organization_domain'), ['domain'], unique=True)
        batch_op.create_index(batch_op.f('ix_simplefin_organization_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('auth_user_id', sa.String(), nullable=False),
    sa.Column('access_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_auth_user_id'), ['auth_user_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)

    op.create_table('budget',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('enable', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simplefin_account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), server_default='', nullable=False),
    sa.Column('currency', sa.String(), server_default='', nullable=False),
    sa.Column('balance', sa.Float(), server_default='0.0', nullable=False),
    sa.Column('available_balance', sa.Float(), nullable=True),
    sa.Column('balance_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('possible_error', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('extra', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('org_domain', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['org_domain'], ['simplefin_organization.domain'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('simplefin_account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_simplefin_account_account_id'), ['account_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_simplefin_account_id'), ['id'], unique=False)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fixed', sa.Boolean(), nullable=False),
    sa.Column('flexible', sa.Boolean(), nullable=False),
    sa.Column('expected_amount', sa.Float(), nullable=False),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['budget.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fund',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('increment', sa.Float(), nullable=False),
    sa.Column('current_amount', sa.Float(), nullable=False),
    sa.Column('max', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['budget.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fixed', sa.Boolean(), nullable=False),
    sa.Column('expected_amount', sa.Float(), nullable=False),
    sa.Column('min', sa.Float(), nullable=True),
    sa.Column('max', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['budget.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('simplefin_transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('posted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('amount', sa.Float(), server_default='0.0', nullable=False),
    sa.Column('description', sa.String(), server_default='', nullable=False),
    sa.Column('payee', sa.String(), nullable=True),
    sa.Column('memo', sa.String(), nullable=True),
    sa.Column('transacted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('pending', sa.Boolean(), server_default='false', nullable=True),
    sa.Column('extra', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_split', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['simplefin_account.account_id'], ),
    sa.ForeignKeyConstraint(['budget_id'], ['budget.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('simplefin_transaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_simplefin_transaction_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_simplefin_transaction_transaction_id'), ['transaction_id'], unique=True)

    op.create_table('transaction_line_item',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_transaction_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('budget_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['budget_id'], ['budget.id'], ),
    sa.ForeignKeyConstraint(['parent_transaction_id'], ['simplefin_transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transaction_line_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_transaction_line_item_parent_transaction_id'), ['parent_transaction_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction_line_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transaction_line_item_parent_transaction_id'))

    op.drop_table('transaction_line_item')
    with op.batch_alter_table('simplefin_transaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_simplefin_transaction_transaction_id'))
        batch_op.drop_index(batch_op.f('ix_simplefin_transaction_id'))

    op.drop_table('simplefin_transaction')
    op.drop_table('income')
    op.drop_table('fund')
    op.drop_table('expense')
    with op.batch_alter_table('simplefin_account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_simplefin_account_id'))
        batch_op.drop_index(batch_op.f('ix_simplefin_account_account_id'))

    op.drop_table('simplefin_account')
    op.drop_table('budget')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_auth_user_id'))

    op.drop_table('user')
    with op.batch_alter_table('simplefin_organization', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_simplefin_organization_id'))
        batch_op.drop_index(batch_op.f('ix_simplefin_organization_domain'))

    op.drop_table('simplefin_organization')
    # ### end Alembic commands ###
